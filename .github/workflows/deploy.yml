name: Node.js CI/CD

on:
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - run: npm ci
      - run: npm run build --if-present

      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKER_USERNAME_CDH }} -p ${{ secrets.DOCKER_PASSWORD_CDH }}

      - name: Build DockerImage
        run: docker build -t ${{ secrets.DOCKER_HUB_NAME_CDH }}/backend:latest ./

      - name: Push DockerImage
        run: docker push ${{ secrets.DOCKER_HUB_NAME_CDH }}/backend:latest

  deploy:
    name: CD PipeLine
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Setting .env
        run: |
          echo "CHATTING_DATABASE_ADDRESS=${{ secrets.CHATTING_DATABASE_ADDRESS }}" >> .env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Generate deployment directory
        run: |
          mkdir -p deploy
          cp Dockerrun.aws.json deploy/Dockerrun.aws.json
          cd deploy && zip -r deploy.zip .
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ secrets.AWS_REGION }}
          environment_name: ${{ secrets.AWS_EB_ENV_NAME }}
          application_name: ${{ secrets.AWS_EB_APP_NAME }}
          version_label: secretjuju-cicd-${{steps.current-time.outputs.formattedTime}}
          deployment_package: deploy/deploy.zip
          wait_for_environment_recovery: 200
